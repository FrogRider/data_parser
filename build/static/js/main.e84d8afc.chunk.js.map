{"version":3,"sources":["components/Posts.js","components/Pagination.js","App.js","index.js"],"names":["Posts","_ref","posts","loading","react_default","a","createElement","className","map","post","key","id","title","body","Pagination","postsPerPage","totalPosts","paginate","currentPage","useEffect","pageLinks","document","getElementsByClassName","i","item","classList","remove","length","add","pageNumbers","Math","ceil","push","number","onClick","href","App","_useState","useState","_useState2","Object","slicedToArray","setPosts","_useState3","_useState4","setLoading","_useState5","_useState6","setCurrentPage","_useState7","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","apply","this","arguments","fetchPosts","indexOfLastPost","infexOfFirstPost","currentPosts","slice","components_Posts","components_Pagination","pageNumber","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.e84d8afc.chunk.js","sourcesContent":["import React from 'react';\n\nconst Posts = ({ posts, loading }) => {\n  if (loading) {\n    return <h2>Loading...</h2>; //display this if data is still loading\n  }\n\n  return (\n    <ul className='list-group mb-4 col-12'>\n      {posts.map(post => ( \n        <li key={post.id} className='list-group-item'>\n          <b> {post.title} </b> <br/> <hr/>\n          {post.body}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Posts;","import React, { useEffect } from 'react';\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate, currentPage }) => {\n\n    useEffect(() => {\n        const pageLinks = document.getElementsByClassName('page-item');\n\n        for(let i = 0; i < totalPosts/postsPerPage; i++) //whenever page number is changed, remove active class from all\n            pageLinks.item(i).classList.remove(\"active\");\n\n        if (pageLinks.length !== 0) //add active class to curent page\n            pageLinks.item(currentPage - 1).classList.add(\"active\");\n\n      }, [currentPage]) //change active page when currentPage variable changes\n\n    const pageNumbers = [];\n\n    for(let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++){\n        pageNumbers.push(i)\n    } //filling array with pages numbers\n\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pageNumbers.map(number => ( //add button for each page \n                    <li key={number} className=\"page-item\">\n                        <a \n                            onClick={() => paginate(number)}\n                            href=\"!#\" \n                            className='page-link'> \n                            {number} \n                            \n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    )\n}\n\nexport default Pagination\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Posts from \"./components/Posts\";\nimport Pagination from \"./components/Pagination\";\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(5); //how many posts needed to be displayed\n\n  useEffect(() => { //triggers when component is mounted and fethes all the data\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n      setPosts(res.data);\n      setLoading(false);\n    }\n\n    fetchPosts();\n  }, [])\n\n  //counting posts per page\n  const indexOfLastPost = currentPage * postsPerPage;\n  const infexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(infexOfFirstPost, indexOfLastPost);\n\n  //change posts for selected page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n  return (\n    <div className=\"container mt-2 col-12\">\n      <h2 className=\"text-primary mb-3 center\">Data from server</h2>\n      <Posts posts={currentPosts} loading={loading}/>\n      <Pagination postsPerPage={postsPerPage} \n                  totalPosts={posts.length} \n                  paginate={paginate}\n                  currentPage={currentPage}/>\n    </div>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}